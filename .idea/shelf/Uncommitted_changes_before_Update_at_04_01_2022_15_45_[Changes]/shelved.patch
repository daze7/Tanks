Index: main.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import pygame\r\nimport sys\r\nimport os\r\nimport tkinter as tk\r\nfrom tkinter import *\r\nfrom tkinter import ttk\r\n\r\npygame.init()\r\nsize = width, height = 800, 800\r\nscreen = pygame.display.set_mode(size)\r\nfps = 60\r\ncurrent_volume = 1\r\nshow_main_menu = False\r\nshow_optoins_menu = False\r\nshow_game = False\r\n\r\ndef except_hook(cls, exception, traceback):\r\n    sys.__excepthook__(cls, exception, traceback)\r\n\r\ndef terminate():\r\n    pygame.quit()\r\n    sys.exit()\r\n\r\n\r\ndef load_image(name, colorkey=None):\r\n    fullname = os.path.join('data', name)\r\n    # если файл не существует, то выходим\r\n    if not os.path.isfile(fullname):\r\n        print(f\"Файл с изображением '{fullname}' не найден\")\r\n        sys.exit()\r\n    image = pygame.image.load(fullname)\r\n    return image\r\n\r\n\r\ndef print_text(message, x, y, font_color=(255, 255, 255), font_type='data/EE-Bellflower.ttf', font_size=30):\r\n    font_type = pygame.font.Font(font_type, font_size)\r\n    text = font_type.render(message, True, font_color)\r\n    screen.blit(text, (x, y))\r\n\r\n\r\nclass Button(pygame.sprite.Sprite):\r\n    global show_main_menu\r\n    def __init__(self, w, h):\r\n        self.w = w\r\n        self.h = h\r\n        self.inactive_color = (0, 0, 0)\r\n        self.active_color = (150, 150, 150)\r\n\r\n    def draw(self, x, y, message, action=None, font_size=50):\r\n        click = pygame.mouse.get_pressed()\r\n        mouse_pos = pygame.mouse.get_pos()\r\n        if x + self.w > mouse_pos[0] > x and y + self.h > mouse_pos[1] > y:\r\n            pygame.draw.rect(screen, self.active_color, (x, y, self.w, self.h))\r\n            if click[0] == 1:\r\n                if action is not None:\r\n                    show_main_menu = False\r\n                    action()\r\n        else:\r\n            pygame.draw.rect(screen, self.inactive_color, (x, y, self.w, self.h))\r\n        print_text(message=message, x=x + 10, y=y + 10, font_size=font_size)\r\n\r\n\r\ndef main_menu():\r\n    global show_main_menu\r\n    start_btn = Button(290, 70)\r\n    settings_btn = Button(255, 70)\r\n    quit_btn = Button(160, 70)\r\n    show_main_menu = True\r\n    main_menu_background = pygame.image.load(\"data/main_menu_background.png\")\r\n    while show_main_menu:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                quit()\r\n        screen.blit(main_menu_background, (0, 0))\r\n        print_text('Танчики', 50, 100, (255, 255, 255), 'data/EE-Bellflower.ttf', 100)\r\n        start_btn.draw(50, 300, 'Начать игру', start_game)\r\n        settings_btn.draw(50, 400, 'Настройки', options_menu)\r\n        quit_btn.draw(50, 500, 'Выход', terminate)\r\n        pygame.display.update()\r\n\r\n\r\ndef start_game():\r\n    pygame.mixer.music.fadeout(2000)\r\n\r\n    #pass\r\ndef check_sounds():\r\n    global show_optoins_menu\r\n    global master_volume\r\n    global sounds_volume\r\n    global music_volume\r\n    f = open('data/config.txt')\r\n    master_volume = float(f.readline().split('=')[1])\r\n    sounds_volume = float(f.readline().split('=')[1])\r\n    music_volume = float(f.readline().split('=')[1])\r\n    f.close()\r\n\r\ndef options_menu():\r\n    global show_optoins_menu\r\n    global master_volume\r\n    global sounds_volume\r\n    global music_volume\r\n    show_optoins_menu = True\r\n    options_menu_background = pygame.image.load(\"data/options_menu_background.png\")\r\n    show = True\r\n    back_btn = Button(170, 70)\r\n    slider1 = 500 + (200 * master_volume)\r\n    slider2 = 500 + (200 * sounds_volume)\r\n    slider3 = 500 + (200 * music_volume)\r\n    slider_rect1 = pygame.Rect(500, 115, 210, 20)\r\n    slider_rect2 = pygame.Rect(500, 215, 210, 20)\r\n    slider_rect3 = pygame.Rect(500, 315, 210, 20)\r\n    while show_optoins_menu:\r\n        for event in pygame.event.get():\r\n            if event.type == pygame.QUIT:\r\n                pygame.quit()\r\n                quit()\r\n        screen.blit(options_menu_background, (0, 0))\r\n        back_btn.draw(50, 600, 'В меню', main_menu)\r\n        print_text('Общая громкость', 50, 100, (255, 255, 255), 'data/EE-Bellflower.ttf', 50)\r\n        print_text('Громкость звуков', 50, 200, (255, 255, 255), 'data/EE-Bellflower.ttf', 50)\r\n        print_text('Громкость музыки', 50, 300, (255, 255, 255), 'data/EE-Bellflower.ttf', 50)\r\n\r\n\r\n\r\n        mouse_pos = pygame.mouse.get_pos()\r\n\r\n        if slider_rect1.collidepoint(mouse_pos) and pygame.mouse.get_pressed()[0] != 0:\r\n            # collision detection also needed here\r\n            slider1 = pygame.mouse.get_pos()[0] - 10\r\n            if slider1 < 500:\r\n                slider1 = 500\r\n            if slider1 > 700:\r\n                slider1 = 700\r\n            f = open('data/config.txt', 'w')\r\n            value = (slider1 - 500) / 200\r\n            master_volume = value\r\n            f.write('master_volume=' + str(value) + '\\n')\r\n            f.write('sounds_volume=' + str(sounds_volume) + '\\n')\r\n            f.write('music_volume=' + str(music_volume) + '\\n')\r\n            f.close()\r\n            pygame.mixer.music.set_volume(master_volume * music_volume)\r\n\r\n        if slider_rect2.collidepoint(mouse_pos) and pygame.mouse.get_pressed()[0] != 0:\r\n            # collision detection also needed here\r\n            slider2 = pygame.mouse.get_pos()[0] - 10\r\n            if slider2 < 500:\r\n                slider2 = 500\r\n            if slider2 > 700:\r\n                slider2 = 700\r\n            f = open('data/config.txt', 'w')\r\n            value = (slider2 - 500) / 200\r\n            sounds_volume = value\r\n            f.write('master_volume=' + str(master_volume) + '\\n')\r\n            f.write('sounds_volume=' + str(value) + '\\n')\r\n            f.write('music_volume=' + str(music_volume) + '\\n')\r\n            f.close()\r\n\r\n        if slider_rect3.collidepoint(mouse_pos) and pygame.mouse.get_pressed()[0] != 0:\r\n            # collision detection also needed here\r\n            slider3 = pygame.mouse.get_pos()[0] - 10\r\n            if slider3 < 500:\r\n                slider3 = 500\r\n            if slider3 > 700:\r\n                slider3 = 700\r\n            f = open('data/config.txt', 'w')\r\n            value = (slider3 - 500) / 200\r\n            music_volume = value\r\n            f.write('master_volume=' + str(master_volume) + '\\n')\r\n            f.write('sounds_volume=' + str(sounds_volume) + '\\n')\r\n            f.write('music_volume=' + str(value) + '\\n')\r\n            f.close()\r\n            pygame.mixer.music.set_volume(master_volume * music_volume)\r\n\r\n        pygame.draw.rect(screen, 'White', slider_rect1)\r\n        pygame.draw.rect(screen, 'RED', pygame.Rect(slider1, 115, 20, 20))\r\n\r\n        pygame.draw.rect(screen, 'WHITE', slider_rect2)\r\n        pygame.draw.rect(screen, 'RED', pygame.Rect(slider2, 215, 20, 20))\r\n\r\n        pygame.draw.rect(screen, 'WHITE', slider_rect3)\r\n        pygame.draw.rect(screen, 'RED', pygame.Rect(slider3, 315, 20, 20))\r\n        pygame.display.update()\r\n\r\ncheck_sounds()\r\npygame.mixer.music.load('data/main_menu_music.wav')\r\npygame.mixer.music.play(-1)\r\npygame.mixer.music.set_volume(master_volume * music_volume)\r\nprint(master_volume, music_volume)\r\n\r\nmain_menu()
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/main.py b/main.py
--- a/main.py	(revision 0659cc361d4f2fd1a2f696e5849eea158ad95239)
+++ b/main.py	(date 1641300281628)
@@ -79,10 +79,14 @@
         quit_btn.draw(50, 500, 'Выход', terminate)
         pygame.display.update()
 
-
 def start_game():
     pygame.mixer.music.fadeout(2000)
-
+    show_game = True
+    while show_game:
+        for event in pygame.event.get():
+            if event.type == pygame.QUIT:
+                pygame.quit()
+                quit()
     #pass
 def check_sounds():
     global show_optoins_menu
Index: data/config.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>master_volume=0.96\r\nsounds_volume=0.19\r\nmusic_volume=0.9\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/data/config.txt b/data/config.txt
--- a/data/config.txt	(revision 0659cc361d4f2fd1a2f696e5849eea158ad95239)
+++ b/data/config.txt	(date 1640449001336)
@@ -1,3 +1,3 @@
-master_volume=0.96
-sounds_volume=0.19
-music_volume=0.9
+master_volume=0.535
+sounds_volume=0.995
+music_volume=0.45
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"60d7796d-30a4-43c9-b0a0-6ba11075aefb\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"22Ml6VJwjwOm5ffNfMnOhp4CbnL\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">\r\n    <property name=\"RunOnceActivity.OpenProjectViewOnStart\" value=\"true\" />\r\n    <property name=\"RunOnceActivity.ShowReadmeOnStart\" value=\"true\" />\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"60d7796d-30a4-43c9-b0a0-6ba11075aefb\" name=\"Changes\" comment=\"\" />\r\n      <created>1639655162405</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1639655162405</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\".\">\r\n      <created>1640604713190</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1640604713190</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"origin/Chernousov/main\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n    <option name=\"oldMeFiltersMigrated\" value=\"true\" />\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\".\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\".\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 0659cc361d4f2fd1a2f696e5849eea158ad95239)
+++ b/.idea/workspace.xml	(date 1641300282533)
@@ -1,7 +1,11 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ChangeListManager">
-    <list default="true" id="60d7796d-30a4-43c9-b0a0-6ba11075aefb" name="Changes" comment="" />
+    <list default="true" id="60d7796d-30a4-43c9-b0a0-6ba11075aefb" name="Changes" comment=".">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/data/config.txt" beforeDir="false" afterPath="$PROJECT_DIR$/data/config.txt" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/main.py" beforeDir="false" afterPath="$PROJECT_DIR$/main.py" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -19,6 +23,31 @@
   <component name="PropertiesComponent">
     <property name="RunOnceActivity.OpenProjectViewOnStart" value="true" />
     <property name="RunOnceActivity.ShowReadmeOnStart" value="true" />
+    <property name="last_opened_file_path" value="$PROJECT_DIR$/main.py" />
+    <property name="settings.editor.selected.configurable" value="preferences.customizations" />
+  </component>
+  <component name="RunManager">
+    <configuration name="123" type="PythonConfigurationType" factoryName="Python">
+      <module name="Tanks_daze" />
+      <option name="INTERPRETER_OPTIONS" value="" />
+      <option name="PARENT_ENVS" value="true" />
+      <envs>
+        <env name="PYTHONUNBUFFERED" value="1" />
+      </envs>
+      <option name="SDK_HOME" value="C:\Users\Acer\AppData\Local\Programs\Python\Python39\python.exe" />
+      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
+      <option name="IS_MODULE_SDK" value="false" />
+      <option name="ADD_CONTENT_ROOTS" value="true" />
+      <option name="ADD_SOURCE_ROOTS" value="true" />
+      <option name="SCRIPT_NAME" value="$PROJECT_DIR$/main.py" />
+      <option name="PARAMETERS" value="" />
+      <option name="SHOW_COMMAND_LINE" value="false" />
+      <option name="EMULATE_TERMINAL" value="false" />
+      <option name="MODULE_MODE" value="false" />
+      <option name="REDIRECT_INPUT" value="false" />
+      <option name="INPUT_FILE" value="" />
+      <method v="2" />
+    </configuration>
   </component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
@@ -50,7 +79,7 @@
                   <entry key="branch">
                     <value>
                       <list>
-                        <option value="origin/Chernousov/main" />
+                        <option value="origin/main" />
                       </list>
                     </value>
                   </entry>
